{
  "resolvedId": "/var/www/html/Sueen-Nature-Frontend/node_modules/fireworks-js/dist/index.es.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * name: fireworks-js\n * version: 2.10.8\n * author: Vitalij Ryndin (https://crashmax.ru)\n * homepage: https://fireworks.js.org\n * license MIT\n */\nfunction f(e) {\n  return Math.abs(Math.floor(e));\n}\nfunction c(e, t) {\n  return Math.random() * (t - e) + e;\n}\nfunction o(e, t) {\n  return Math.floor(c(e, t + 1));\n}\nfunction m(e, t, i, s) {\n  const n = Math.pow;\n  return Math.sqrt(n(e - i, 2) + n(t - s, 2));\n}\nfunction x(e, t, i = 1) {\n  if (e > 360 || e < 0)\n    throw new Error(`Expected hue 0-360 range, got \\`${e}\\``);\n  if (t > 100 || t < 0)\n    throw new Error(`Expected lightness 0-100 range, got \\`${t}\\``);\n  if (i > 1 || i < 0)\n    throw new Error(`Expected alpha 0-1 range, got \\`${i}\\``);\n  return `hsla(${e}, 100%, ${t}%, ${i})`;\n}\nconst g = (e) => {\n  if (typeof e == \"object\" && e !== null) {\n    if (typeof Object.getPrototypeOf == \"function\") {\n      const t = Object.getPrototypeOf(e);\n      return t === Object.prototype || t === null;\n    }\n    return Object.prototype.toString.call(e) === \"[object Object]\";\n  }\n  return !1;\n}, y = [\n  \"__proto__\",\n  \"constructor\",\n  \"prototype\"\n], v = (...e) => e.reduce((t, i) => (Object.keys(i).forEach((s) => {\n  y.includes(s) || (Array.isArray(t[s]) && Array.isArray(i[s]) ? t[s] = i[s] : g(t[s]) && g(i[s]) ? t[s] = v(t[s], i[s]) : t[s] = i[s]);\n}), t), {});\nfunction b(e, t) {\n  let i;\n  return (...s) => {\n    i && clearTimeout(i), i = setTimeout(() => e(...s), t);\n  };\n}\nclass S {\n  x;\n  y;\n  ctx;\n  hue;\n  friction;\n  gravity;\n  flickering;\n  lineWidth;\n  explosionLength;\n  angle;\n  speed;\n  brightness;\n  coordinates = [];\n  decay;\n  alpha = 1;\n  constructor({\n    x: t,\n    y: i,\n    ctx: s,\n    hue: n,\n    decay: h,\n    gravity: a,\n    friction: r,\n    brightness: u,\n    flickering: p,\n    lineWidth: l,\n    explosionLength: d\n  }) {\n    for (this.x = t, this.y = i, this.ctx = s, this.hue = n, this.gravity = a, this.friction = r, this.flickering = p, this.lineWidth = l, this.explosionLength = d, this.angle = c(0, Math.PI * 2), this.speed = o(1, 10), this.brightness = o(u.min, u.max), this.decay = c(h.min, h.max); this.explosionLength--; )\n      this.coordinates.push([t, i]);\n  }\n  update(t) {\n    this.coordinates.pop(), this.coordinates.unshift([this.x, this.y]), this.speed *= this.friction, this.x += Math.cos(this.angle) * this.speed, this.y += Math.sin(this.angle) * this.speed + this.gravity, this.alpha -= this.decay, this.alpha <= this.decay && t();\n  }\n  draw() {\n    const t = this.coordinates.length - 1;\n    this.ctx.beginPath(), this.ctx.lineWidth = this.lineWidth, this.ctx.fillStyle = x(this.hue, this.brightness, this.alpha), this.ctx.moveTo(\n      this.coordinates[t][0],\n      this.coordinates[t][1]\n    ), this.ctx.lineTo(this.x, this.y), this.ctx.strokeStyle = x(\n      this.hue,\n      this.flickering ? c(0, this.brightness) : this.brightness,\n      this.alpha\n    ), this.ctx.stroke();\n  }\n}\nclass E {\n  constructor(t, i) {\n    this.options = t, this.canvas = i, this.pointerDown = this.pointerDown.bind(this), this.pointerUp = this.pointerUp.bind(this), this.pointerMove = this.pointerMove.bind(this);\n  }\n  active = !1;\n  x;\n  y;\n  get mouseOptions() {\n    return this.options.mouse;\n  }\n  mount() {\n    this.canvas.addEventListener(\"pointerdown\", this.pointerDown), this.canvas.addEventListener(\"pointerup\", this.pointerUp), this.canvas.addEventListener(\"pointermove\", this.pointerMove);\n  }\n  unmount() {\n    this.canvas.removeEventListener(\"pointerdown\", this.pointerDown), this.canvas.removeEventListener(\"pointerup\", this.pointerUp), this.canvas.removeEventListener(\"pointermove\", this.pointerMove);\n  }\n  usePointer(t, i) {\n    const { click: s, move: n } = this.mouseOptions;\n    (s || n) && (this.x = t.pageX - this.canvas.offsetLeft, this.y = t.pageY - this.canvas.offsetTop, this.active = i);\n  }\n  pointerDown(t) {\n    this.usePointer(t, this.mouseOptions.click);\n  }\n  pointerUp(t) {\n    this.usePointer(t, !1);\n  }\n  pointerMove(t) {\n    this.usePointer(t, this.active);\n  }\n}\nclass O {\n  hue;\n  rocketsPoint;\n  opacity;\n  acceleration;\n  friction;\n  gravity;\n  particles;\n  explosion;\n  mouse;\n  boundaries;\n  sound;\n  delay;\n  brightness;\n  decay;\n  flickering;\n  intensity;\n  traceLength;\n  traceSpeed;\n  lineWidth;\n  lineStyle;\n  autoresize;\n  constructor() {\n    this.autoresize = !0, this.lineStyle = \"round\", this.flickering = 50, this.traceLength = 3, this.traceSpeed = 10, this.intensity = 30, this.explosion = 5, this.gravity = 1.5, this.opacity = 0.5, this.particles = 50, this.friction = 0.95, this.acceleration = 1.05, this.hue = {\n      min: 0,\n      max: 360\n    }, this.rocketsPoint = {\n      min: 50,\n      max: 50\n    }, this.lineWidth = {\n      explosion: {\n        min: 1,\n        max: 3\n      },\n      trace: {\n        min: 1,\n        max: 2\n      }\n    }, this.mouse = {\n      click: !1,\n      move: !1,\n      max: 1\n    }, this.delay = {\n      min: 30,\n      max: 60\n    }, this.brightness = {\n      min: 50,\n      max: 80\n    }, this.decay = {\n      min: 0.015,\n      max: 0.03\n    }, this.sound = {\n      enabled: !1,\n      files: [\n        \"explosion0.mp3\",\n        \"explosion1.mp3\",\n        \"explosion2.mp3\"\n      ],\n      volume: {\n        min: 4,\n        max: 8\n      }\n    }, this.boundaries = {\n      debug: !1,\n      height: 0,\n      width: 0,\n      x: 50,\n      y: 50\n    };\n  }\n  update(t) {\n    Object.assign(this, v(this, t));\n  }\n}\nclass z {\n  constructor(t, i) {\n    this.options = t, this.render = i;\n  }\n  tick = 0;\n  rafId = 0;\n  fps = 60;\n  tolerance = 0.1;\n  now;\n  mount() {\n    this.now = performance.now();\n    const t = 1e3 / this.fps, i = (s) => {\n      this.rafId = requestAnimationFrame(i);\n      const n = s - this.now;\n      n >= t - this.tolerance && (this.render(), this.now = s - n % t, this.tick += n * (this.options.intensity * Math.PI) / 1e3);\n    };\n    this.rafId = requestAnimationFrame(i);\n  }\n  unmount() {\n    cancelAnimationFrame(this.rafId);\n  }\n}\nclass L {\n  constructor(t, i, s) {\n    this.options = t, this.updateSize = i, this.container = s;\n  }\n  resizer;\n  mount() {\n    if (!this.resizer) {\n      const t = b(() => this.updateSize(), 100);\n      this.resizer = new ResizeObserver(t);\n    }\n    this.options.autoresize && this.resizer.observe(this.container);\n  }\n  unmount() {\n    this.resizer && this.resizer.unobserve(this.container);\n  }\n}\nclass M {\n  constructor(t) {\n    this.options = t, this.init();\n  }\n  buffers = [];\n  audioContext;\n  onInit = !1;\n  get isEnabled() {\n    return this.options.sound.enabled;\n  }\n  get soundOptions() {\n    return this.options.sound;\n  }\n  init() {\n    !this.onInit && this.isEnabled && (this.onInit = !0, this.audioContext = new (window.AudioContext || window.webkitAudioContext)(), this.loadSounds());\n  }\n  async loadSounds() {\n    for (const t of this.soundOptions.files) {\n      const i = await (await fetch(t)).arrayBuffer();\n      this.audioContext.decodeAudioData(i).then((s) => {\n        this.buffers.push(s);\n      }).catch((s) => {\n        throw s;\n      });\n    }\n  }\n  play() {\n    if (this.isEnabled && this.buffers.length) {\n      const t = this.audioContext.createBufferSource(), i = this.buffers[o(0, this.buffers.length - 1)], s = this.audioContext.createGain();\n      t.buffer = i, s.gain.value = c(\n        this.soundOptions.volume.min / 100,\n        this.soundOptions.volume.max / 100\n      ), s.connect(this.audioContext.destination), t.connect(s), t.start(0);\n    } else\n      this.init();\n  }\n}\nclass C {\n  x;\n  y;\n  sx;\n  sy;\n  dx;\n  dy;\n  ctx;\n  hue;\n  speed;\n  acceleration;\n  traceLength;\n  totalDistance;\n  angle;\n  brightness;\n  coordinates = [];\n  currentDistance = 0;\n  constructor({\n    x: t,\n    y: i,\n    dx: s,\n    dy: n,\n    ctx: h,\n    hue: a,\n    speed: r,\n    traceLength: u,\n    acceleration: p\n  }) {\n    for (this.x = t, this.y = i, this.sx = t, this.sy = i, this.dx = s, this.dy = n, this.ctx = h, this.hue = a, this.speed = r, this.traceLength = u, this.acceleration = p, this.totalDistance = m(t, i, s, n), this.angle = Math.atan2(n - i, s - t), this.brightness = o(50, 70); this.traceLength--; )\n      this.coordinates.push([t, i]);\n  }\n  update(t) {\n    this.coordinates.pop(), this.coordinates.unshift([this.x, this.y]), this.speed *= this.acceleration;\n    const i = Math.cos(this.angle) * this.speed, s = Math.sin(this.angle) * this.speed;\n    this.currentDistance = m(\n      this.sx,\n      this.sy,\n      this.x + i,\n      this.y + s\n    ), this.currentDistance >= this.totalDistance ? t(this.dx, this.dy, this.hue) : (this.x += i, this.y += s);\n  }\n  draw() {\n    const t = this.coordinates.length - 1;\n    this.ctx.beginPath(), this.ctx.moveTo(\n      this.coordinates[t][0],\n      this.coordinates[t][1]\n    ), this.ctx.lineTo(this.x, this.y), this.ctx.strokeStyle = x(this.hue, this.brightness), this.ctx.stroke();\n  }\n}\nclass T {\n  target;\n  container;\n  canvas;\n  ctx;\n  width;\n  height;\n  traces = [];\n  explosions = [];\n  waitStopRaf;\n  running = !1;\n  opts;\n  sound;\n  resize;\n  mouse;\n  raf;\n  constructor(t, i = {}) {\n    this.target = t, this.container = t, this.opts = new O(), this.createCanvas(this.target), this.updateOptions(i), this.sound = new M(this.opts), this.resize = new L(\n      this.opts,\n      this.updateSize.bind(this),\n      this.container\n    ), this.mouse = new E(this.opts, this.canvas), this.raf = new z(this.opts, this.render.bind(this));\n  }\n  get isRunning() {\n    return this.running;\n  }\n  get version() {\n    return \"2.10.8\";\n  }\n  get currentOptions() {\n    return this.opts;\n  }\n  start() {\n    this.running || (this.canvas.isConnected || this.createCanvas(this.target), this.running = !0, this.resize.mount(), this.mouse.mount(), this.raf.mount());\n  }\n  stop(t = !1) {\n    this.running && (this.running = !1, this.resize.unmount(), this.mouse.unmount(), this.raf.unmount(), this.clear(), t && this.canvas.remove());\n  }\n  async waitStop(t) {\n    if (this.running)\n      return new Promise((i) => {\n        this.waitStopRaf = () => {\n          this.waitStopRaf && (requestAnimationFrame(this.waitStopRaf), !this.traces.length && !this.explosions.length && (this.waitStopRaf = null, this.stop(t), i()));\n        }, this.waitStopRaf();\n      });\n  }\n  pause() {\n    this.running = !this.running, this.running ? this.raf.mount() : this.raf.unmount();\n  }\n  clear() {\n    this.ctx && (this.traces = [], this.explosions = [], this.ctx.clearRect(0, 0, this.width, this.height));\n  }\n  launch(t = 1) {\n    for (let i = 0; i < t; i++)\n      this.createTrace();\n    this.waitStopRaf || (this.start(), this.waitStop());\n  }\n  updateOptions(t) {\n    this.opts.update(t);\n  }\n  updateSize({\n    width: t = this.container.clientWidth,\n    height: i = this.container.clientHeight\n  } = {}) {\n    this.width = t, this.height = i, this.canvas.width = t, this.canvas.height = i, this.updateBoundaries({\n      ...this.opts.boundaries,\n      width: t,\n      height: i\n    });\n  }\n  updateBoundaries(t) {\n    this.updateOptions({ boundaries: t });\n  }\n  createCanvas(t) {\n    t instanceof HTMLCanvasElement ? (t.isConnected || document.body.append(t), this.canvas = t) : (this.canvas = document.createElement(\"canvas\"), this.container.append(this.canvas)), this.ctx = this.canvas.getContext(\"2d\"), this.updateSize();\n  }\n  render() {\n    if (!this.ctx || !this.running) return;\n    const { opacity: t, lineStyle: i, lineWidth: s } = this.opts;\n    this.ctx.globalCompositeOperation = \"destination-out\", this.ctx.fillStyle = `rgba(0, 0, 0, ${t})`, this.ctx.fillRect(0, 0, this.width, this.height), this.ctx.globalCompositeOperation = \"lighter\", this.ctx.lineCap = i, this.ctx.lineJoin = \"round\", this.ctx.lineWidth = c(s.trace.min, s.trace.max), this.initTrace(), this.drawTrace(), this.drawExplosion();\n  }\n  createTrace() {\n    const {\n      hue: t,\n      rocketsPoint: i,\n      boundaries: s,\n      traceLength: n,\n      traceSpeed: h,\n      acceleration: a,\n      mouse: r\n    } = this.opts;\n    this.traces.push(\n      new C({\n        x: this.width * o(i.min, i.max) / 100,\n        y: this.height,\n        dx: this.mouse.x && r.move || this.mouse.active ? this.mouse.x : o(s.x, s.width - s.x * 2),\n        dy: this.mouse.y && r.move || this.mouse.active ? this.mouse.y : o(s.y, s.height * 0.5),\n        ctx: this.ctx,\n        hue: o(t.min, t.max),\n        speed: h,\n        acceleration: a,\n        traceLength: f(n)\n      })\n    );\n  }\n  initTrace() {\n    if (this.waitStopRaf) return;\n    const { delay: t, mouse: i } = this.opts;\n    (this.raf.tick > o(t.min, t.max) || this.mouse.active && i.max > this.traces.length) && (this.createTrace(), this.raf.tick = 0);\n  }\n  drawTrace() {\n    let t = this.traces.length;\n    for (; t--; )\n      this.traces[t].draw(), this.traces[t].update((i, s, n) => {\n        this.initExplosion(i, s, n), this.sound.play(), this.traces.splice(t, 1);\n      });\n  }\n  initExplosion(t, i, s) {\n    const {\n      particles: n,\n      flickering: h,\n      lineWidth: a,\n      explosion: r,\n      brightness: u,\n      friction: p,\n      gravity: l,\n      decay: d\n    } = this.opts;\n    let w = f(n);\n    for (; w--; )\n      this.explosions.push(\n        new S({\n          x: t,\n          y: i,\n          ctx: this.ctx,\n          hue: s,\n          friction: p,\n          gravity: l,\n          flickering: o(0, 100) <= h,\n          lineWidth: c(\n            a.explosion.min,\n            a.explosion.max\n          ),\n          explosionLength: f(r),\n          brightness: u,\n          decay: d\n        })\n      );\n  }\n  drawExplosion() {\n    let t = this.explosions.length;\n    for (; t--; )\n      this.explosions[t].draw(), this.explosions[t].update(() => {\n        this.explosions.splice(t, 1);\n      });\n  }\n}\nexport {\n  T as Fireworks,\n  T as default\n};\n",
      "start": 1727432815653,
      "end": 1727432816681,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1727432816681,
      "end": 1727432816681,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1727432816682,
      "end": 1727432816682,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1727432816682,
      "end": 1727432816682,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1727432816682,
      "end": 1727432816682,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1727432816682,
      "end": 1727432816682,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1727432816682,
      "end": 1727432816682,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1727432816682,
      "end": 1727432816682,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1727432816682,
      "end": 1727432816682,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1727432816682,
      "end": 1727432816682,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727432816682,
      "end": 1727432816682,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1727432816682,
      "end": 1727432816682,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1727432816682,
      "end": 1727432816682,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1727432816682,
      "end": 1727432816682,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727432816682,
      "end": 1727432816682,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1727432816682,
      "end": 1727432816682,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1727432816682,
      "end": 1727432816682,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1727432816682,
      "end": 1727432816682,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1727432816682,
      "end": 1727432816682,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1727432816682,
      "end": 1727432816682,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1727432816682,
      "end": 1727432816682,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1727432816682,
      "end": 1727432816690,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1727432816690,
      "end": 1727432816690,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1727432816690,
      "end": 1727432816690,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1727432816690,
      "end": 1727432816690,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1727432816690,
      "end": 1727432816690,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1727432816690,
      "end": 1727432816690,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1727432816690,
      "end": 1727432816690,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1727432816690,
      "end": 1727432816690,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1727432816690,
      "end": 1727432816690,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1727432816690,
      "end": 1727432816690,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1727432816690,
      "end": 1727432816691,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1727432816691,
      "end": 1727432816691,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1727432816691,
      "end": 1727432816691,
      "order": "normal"
    }
  ]
}
