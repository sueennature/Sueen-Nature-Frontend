{
  "resolvedId": "/var/www/html/Sueen-Nature-Frontend/node_modules/flowbite/lib/esm/components/collapse/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport instances from '../../dom/instances';\nvar Default = {\n    onCollapse: function () { },\n    onExpand: function () { },\n    onToggle: function () { },\n};\nvar DefaultInstanceOptions = {\n    id: null,\n    override: true,\n};\nvar Collapse = /** @class */ (function () {\n    function Collapse(targetEl, triggerEl, options, instanceOptions) {\n        if (targetEl === void 0) { targetEl = null; }\n        if (triggerEl === void 0) { triggerEl = null; }\n        if (options === void 0) { options = Default; }\n        if (instanceOptions === void 0) { instanceOptions = DefaultInstanceOptions; }\n        this._instanceId = instanceOptions.id\n            ? instanceOptions.id\n            : targetEl.id;\n        this._targetEl = targetEl;\n        this._triggerEl = triggerEl;\n        this._options = __assign(__assign({}, Default), options);\n        this._visible = false;\n        this._initialized = false;\n        this.init();\n        instances.addInstance('Collapse', this, this._instanceId, instanceOptions.override);\n    }\n    Collapse.prototype.init = function () {\n        var _this = this;\n        if (this._triggerEl && this._targetEl && !this._initialized) {\n            if (this._triggerEl.hasAttribute('aria-expanded')) {\n                this._visible =\n                    this._triggerEl.getAttribute('aria-expanded') === 'true';\n            }\n            else {\n                // fix until v2 not to break previous single collapses which became dismiss\n                this._visible = !this._targetEl.classList.contains('hidden');\n            }\n            this._clickHandler = function () {\n                _this.toggle();\n            };\n            this._triggerEl.addEventListener('click', this._clickHandler);\n            this._initialized = true;\n        }\n    };\n    Collapse.prototype.destroy = function () {\n        if (this._triggerEl && this._initialized) {\n            this._triggerEl.removeEventListener('click', this._clickHandler);\n            this._initialized = false;\n        }\n    };\n    Collapse.prototype.removeInstance = function () {\n        instances.removeInstance('Collapse', this._instanceId);\n    };\n    Collapse.prototype.destroyAndRemoveInstance = function () {\n        this.destroy();\n        this.removeInstance();\n    };\n    Collapse.prototype.collapse = function () {\n        this._targetEl.classList.add('hidden');\n        if (this._triggerEl) {\n            this._triggerEl.setAttribute('aria-expanded', 'false');\n        }\n        this._visible = false;\n        // callback function\n        this._options.onCollapse(this);\n    };\n    Collapse.prototype.expand = function () {\n        this._targetEl.classList.remove('hidden');\n        if (this._triggerEl) {\n            this._triggerEl.setAttribute('aria-expanded', 'true');\n        }\n        this._visible = true;\n        // callback function\n        this._options.onExpand(this);\n    };\n    Collapse.prototype.toggle = function () {\n        if (this._visible) {\n            this.collapse();\n        }\n        else {\n            this.expand();\n        }\n        // callback function\n        this._options.onToggle(this);\n    };\n    Collapse.prototype.updateOnCollapse = function (callback) {\n        this._options.onCollapse = callback;\n    };\n    Collapse.prototype.updateOnExpand = function (callback) {\n        this._options.onExpand = callback;\n    };\n    Collapse.prototype.updateOnToggle = function (callback) {\n        this._options.onToggle = callback;\n    };\n    return Collapse;\n}());\nexport function initCollapses() {\n    document\n        .querySelectorAll('[data-collapse-toggle]')\n        .forEach(function ($triggerEl) {\n        var targetId = $triggerEl.getAttribute('data-collapse-toggle');\n        var $targetEl = document.getElementById(targetId);\n        // check if the target element exists\n        if ($targetEl) {\n            if (!instances.instanceExists('Collapse', $targetEl.getAttribute('id'))) {\n                new Collapse($targetEl, $triggerEl);\n            }\n            else {\n                // if instance exists already for the same target element then create a new one with a different trigger element\n                new Collapse($targetEl, $triggerEl, {}, {\n                    id: $targetEl.getAttribute('id') +\n                        '_' +\n                        instances._generateRandomId(),\n                });\n            }\n        }\n        else {\n            console.error(\"The target element with id \\\"\".concat(targetId, \"\\\" does not exist. Please check the data-collapse-toggle attribute.\"));\n        }\n    });\n}\nif (typeof window !== 'undefined') {\n    window.Collapse = Collapse;\n    window.initCollapses = initCollapses;\n}\nexport default Collapse;\n//# sourceMappingURL=index.js.map",
      "start": 1727432816702,
      "end": 1727432816996,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1727432816996,
      "end": 1727432816996,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1727432816996,
      "end": 1727432816996,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1727432816997,
      "end": 1727432816997,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1727432816997,
      "end": 1727432816997,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1727432816997,
      "end": 1727432816997,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1727432816997,
      "end": 1727432816997,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1727432816997,
      "end": 1727432816997,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1727432816997,
      "end": 1727432816997,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1727432816997,
      "end": 1727432816997,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727432816997,
      "end": 1727432816997,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1727432816997,
      "end": 1727432816997,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1727432816997,
      "end": 1727432816997,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1727432816997,
      "end": 1727432816997,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727432816997,
      "end": 1727432816997,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1727432816997,
      "end": 1727432816997,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1727432816997,
      "end": 1727432816997,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1727432816997,
      "end": 1727432816997,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1727432816997,
      "end": 1727432816997,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1727432816997,
      "end": 1727432816997,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1727432816997,
      "end": 1727432816997,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1727432816997,
      "end": 1727432816998,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1727432816999,
      "end": 1727432816999,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1727432816999,
      "end": 1727432816999,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1727432816999,
      "end": 1727432816999,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1727432816999,
      "end": 1727432816999,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1727432816999,
      "end": 1727432816999,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1727432816999,
      "end": 1727432816999,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1727432816999,
      "end": 1727432816999,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1727432816999,
      "end": 1727432816999,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1727432816999,
      "end": 1727432816999,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1727432816999,
      "end": 1727432816999,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1727432816999,
      "end": 1727432816999,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1727432816999,
      "end": 1727432816999,
      "order": "normal"
    }
  ]
}
