{"version":3,"file":"gallery-ocHXo0K5.js","sources":["../../../../components/galleryComponent.vue"],"sourcesContent":["<template>\n  <div class=\"masonry-grid my-24 mx-14\">\n    <!-- Loop through all the media URLs from all carousels and display them -->\n    <div v-for=\"(url, idx) in allMedia\" :key=\"idx\" class=\"masonry-item\">\n      <!-- Image handling -->\n      <img\n        v-if=\"url.media_type === 'image'\"\n        :src=\"getImageUrl(url.path)\"\n        class=\"w-full h-auto object-cover rounded-none cursor-pointer\"\n        alt=\"carousel image\"\n        @click=\"openLightbox(idx)\"\n      />\n      \n      <!-- Video handling -->\n      <video v-if=\"url.media_type === 'video'\" controls class=\"w-full h-auto rounded-lg\">\n        <source :src=\"getImageUrl(url.path)\" type=\"video/mp4\" />\n        Your browser does not support the video tag.\n      </video>\n    </div>\n\n    <!-- Lightbox Component -->\n    <vue-easy-lightbox\n      :visible=\"visible\"\n      :imgs=\"imageUrls\"\n      :index=\"lightboxIndex\"\n      :zoom-percent=\"120\"\n      @hide=\"visible = false\"\n    />\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport VueEasyLightbox from 'vue-easy-lightbox';\n\nexport default {\n  components: {\n    VueEasyLightbox\n  },\n  data() {\n    return {\n      carousels: [], // Raw carousels fetched from the API\n      visible: false, // Controls the lightbox visibility\n      lightboxIndex: 0, // Index of the current image in the lightbox\n    };\n  },\n  computed: {\n    allMedia() {\n      const uniqueMedia = new Set(); // Create a Set to store unique media paths\n\n      return this.carousels\n        .filter(carousel => carousel.tags && carousel.tags.includes('Gallery')) // Filter \"Gallery\" tagged carousels\n        .flatMap(carousel =>\n          carousel.media_urls\n            .map(url => ({ path: url, media_type: carousel.media_type }))\n            .filter(media => {\n              if (!uniqueMedia.has(media.path)) {\n                uniqueMedia.add(media.path); // Add unique path to the Set\n                return true; // Include this media\n              }\n              return false; // Skip duplicate media\n            })\n        );\n    },\n    imageUrls() {\n      // Extract the image paths only for the lightbox\n      return this.allMedia.filter(media => media.media_type === 'image').map(media => this.getImageUrl(media.path));\n    }\n  },\n  mounted() {\n    this.fetchCarousels();\n  },\n  methods: {\n    async fetchCarousels() {\n      const runtimeConfig = useRuntimeConfig();\n      try {\n        const response = await axios.get('https://api.sueennature.com/carousels/?skip=0&limit=10', {\n          headers: {\n            'x-api-key': runtimeConfig.public.DATABASE_ID, // Replace with your actual API key\n            \"Content-Type\": \"application/json\",\n          }\n        });\n        this.carousels = response.data.data; // Assign the fetched carousels data\n      } catch (error) {\n        console.error('Error fetching carousels:', error);\n      }\n    },\n    getImageUrl(path) {\n      return `https://api.sueennature.com/${path}`;\n    },\n    openLightbox(index) {\n      this.lightboxIndex = index; // Set the current index of the image\n      this.visible = true; // Show the lightbox\n    }\n  }\n};\n\n</script>\n\n<style scoped>\n/* Masonry Layout */\n.masonry-grid {\n  column-count: 2; /* Number of columns */\n  column-gap: 0.5rem; /* Gap between columns */\n}\n\n@media (min-width: 768px) {\n  .masonry-grid {\n    column-count: 4; /* Adjust the number of columns for larger screens */\n  }\n}\n\n/* Gap between individual items */\n.masonry-item {\n  margin-bottom: 0.5rem; /* Adds gap between images */\n  overflow: hidden; /* Prevent the image from expanding outside the container */\n}\n\n/* Style for images and videos */\n.masonry-grid img, \n.masonry-grid video {\n  break-inside: avoid; /* Prevent media from being broken across columns */\n  width: 100%; /* Ensure full width within column */\n  transition: transform 0.3s ease-in-out; /* Smooth transition for zoom effect */\n}\n\n/* Subtle zoom-in effect on hover */\n.masonry-grid img:hover, \n.masonry-grid video:hover {\n  transform: scale(1.1); /* Subtle zoom, keep size controlled */\n}\n</style>\n\n  "],"names":["_sfc_main","_ssrRenderAttrs","_mergeProps","_ssrRenderList","_ssrRenderAttr","_ssrRenderComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,MAAKA,cAAU;AAAA,EACb,YAAY;AAAA,IACV;AAAA,EACD;AAAA,EACD,OAAO;AACL,WAAO;AAAA,MACL,WAAW,CAAE;AAAA;AAAA,MACb,SAAS;AAAA;AAAA,MACT,eAAe;AAAA;AAAA;EAElB;AAAA,EACD,UAAU;AAAA,IACR,WAAW;AACT,YAAM,cAAc,oBAAI;AAExB,aAAO,KAAK,UACT,OAAO,cAAY,SAAS,QAAQ,SAAS,KAAK,SAAS,SAAS,CAAC,EACrE;AAAA,QAAQ,cACP,SAAS,WACN,IAAI,UAAQ,EAAE,MAAM,KAAK,YAAY,SAAS,WAAW,EAAE,EAC3D,OAAO,WAAS;AACf,cAAI,CAAC,YAAY,IAAI,MAAM,IAAI,GAAG;AAChC,wBAAY,IAAI,MAAM,IAAI;AAC1B,mBAAO;AAAA,UACT;AACA,iBAAO;AAAA,SACR;AAAA;IAER;AAAA,IACD,YAAY;AAEV,aAAO,KAAK,SAAS,OAAO,WAAS,MAAM,eAAe,OAAO,EAAE,IAAI,WAAS,KAAK,YAAY,MAAM,IAAI,CAAC;AAAA,IAC9G;AAAA,EACD;AAAA,EACD,UAAU;AACR,SAAK,eAAc;AAAA,EACpB;AAAA,EACD,SAAS;AAAA,IACP,MAAM,iBAAiB;AACrB,YAAM,gBAAgB;AACtB,UAAI;AACF,cAAM,WAAW,MAAM,MAAM,IAAI,0DAA0D;AAAA,UACzF,SAAS;AAAA,YACP,aAAa,cAAc,OAAO;AAAA;AAAA,YAClC,gBAAgB;AAAA,UAClB;AAAA,QACF,CAAC;AACD,aAAK,YAAY,SAAS,KAAK;AAAA,MAC/B,SAAO,OAAO;AACd,gBAAQ,MAAM,6BAA6B,KAAK;AAAA,MAClD;AAAA,IACD;AAAA,IACD,YAAY,MAAM;AAChB,aAAO,+BAA+B,IAAI;AAAA,IAC3C;AAAA,IACD,aAAa,OAAO;AAClB,WAAK,gBAAgB;AACrB,WAAK,UAAU;AAAA,IACjB;AAAA,EACF;AACF;;;AAhGA,QAAA,OAAAC,eAAAC,WAAA,EACO,OAAM,8BADb,MAAA,CAAA,CAAA,2BAAA;AAAAC,gBAG8B,SAAQ,UAHtC,CAGiB,KAAK,QAAG;AAHzB,UAAA,4CAAA;AAMc,QAAA,IAAI,eAAU,SAAA;AAN5B,YAAA,OAAAC,cAOS,OAAK,qBAAY,IAAI,IAAI,CAAA,CAAA,uGAAA;AAAA;AAPlC,YAAA,SAAA;AAAA;AAcmB,QAAA,IAAI,eAAU,SAAA;AAdjC,YAAA,2EAAAA,cAeiB,OAAK,qBAAY,IAAI,IAAI,CAAA,CAAA,0FAAA;AAAA;AAf1C,YAAA,SAAA;AAAA;AAAA,UAAA,QAAA;AAAA;AAAA,QAAA,UAAA;AAAA,QAAAC,mBAAA,8BAAA;AAAA,IAsBO,SAAS,MAAO;AAAA,IAChB,MAAM,SAAS;AAAA,IACf,OAAO,MAAa;AAAA,IACpB,gBAAc;AAAA,IACd,oBAAM,MAAO,UAAA;AAAA;AA1BpB,QAAA,QAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}