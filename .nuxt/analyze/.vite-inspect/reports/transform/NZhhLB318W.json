{
  "resolvedId": "/var/www/html/Sueen-Nature-Frontend/node_modules/core-js/internals/export.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict';\nvar global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || defineGlobalProperty(TARGET, {});\n  } else {\n    target = global[TARGET] && global[TARGET].prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty == typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    defineBuiltIn(target, key, sourceProperty, options);\n  }\n};\n",
      "start": 1727432819904,
      "end": 1727432820018,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1727432820018,
      "end": 1727432820018,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1727432820018,
      "end": 1727432820018,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1727432820018,
      "end": 1727432820018,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1727432820018,
      "end": 1727432820018,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1727432820018,
      "end": 1727432820018,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1727432820018,
      "end": 1727432820018,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1727432820018,
      "end": 1727432820018,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1727432820018,
      "end": 1727432820018,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1727432820018,
      "end": 1727432820018,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727432820018,
      "end": 1727432820018,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1727432820018,
      "end": 1727432820018,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1727432820018,
      "end": 1727432820018,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1727432820018,
      "end": 1727432820019,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727432820019,
      "end": 1727432820019,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1727432820019,
      "end": 1727432820019,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1727432820019,
      "end": 1727432820019,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1727432820019,
      "end": 1727432820019,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1727432820019,
      "end": 1727432820019,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1727432820019,
      "end": 1727432820019,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1727432820019,
      "end": 1727432820019,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport require$$0 from \"\\u0000/var/www/html/Sueen-Nature-Frontend/node_modules/core-js/internals/global.js?commonjs-proxy\";\nimport require$$1 from \"\\u0000/var/www/html/Sueen-Nature-Frontend/node_modules/core-js/internals/object-get-own-property-descriptor.js?commonjs-proxy\";\nimport require$$2 from \"\\u0000/var/www/html/Sueen-Nature-Frontend/node_modules/core-js/internals/create-non-enumerable-property.js?commonjs-proxy\";\nimport require$$3 from \"\\u0000/var/www/html/Sueen-Nature-Frontend/node_modules/core-js/internals/define-built-in.js?commonjs-proxy\";\nimport require$$4 from \"\\u0000/var/www/html/Sueen-Nature-Frontend/node_modules/core-js/internals/define-global-property.js?commonjs-proxy\";\nimport require$$5 from \"\\u0000/var/www/html/Sueen-Nature-Frontend/node_modules/core-js/internals/copy-constructor-properties.js?commonjs-proxy\";\nimport require$$6 from \"\\u0000/var/www/html/Sueen-Nature-Frontend/node_modules/core-js/internals/is-forced.js?commonjs-proxy\";\n\n'use strict';\nvar global = require$$0;\nvar getOwnPropertyDescriptor = require$$1.f;\nvar createNonEnumerableProperty = require$$2;\nvar defineBuiltIn = require$$3;\nvar defineGlobalProperty = require$$4;\nvar copyConstructorProperties = require$$5;\nvar isForced = require$$6;\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nvar _export = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || defineGlobalProperty(TARGET, {});\n  } else {\n    target = global[TARGET] && global[TARGET].prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty == typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    defineBuiltIn(target, key, sourceProperty, options);\n  }\n};\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(_export);\nexport { _export as __moduleExports };",
      "start": 1727432820019,
      "end": 1727432820807,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;;AAAA,YAAY,CAAC;AACb,IAAI,MAAM,GAAG,UAA8B,CAAC;AAC5C,IAAI,wBAAwB,GAAG,UAA0D,CAAC,CAAC,CAAC;AAC5F,IAAI,2BAA2B,GAAG,UAAsD,CAAC;AACzF,IAAI,aAAa,GAAG,UAAuC,CAAC;AAC5D,IAAI,oBAAoB,GAAG,UAA8C,CAAC;AAC1E,IAAI,yBAAyB,GAAG,UAAmD,CAAC;AACpF,IAAI,QAAQ,GAAG,UAAiC,CAAC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,OAAc,GAAG,UAAU,OAAO,EAAE,MAAM,EAAE;AAC5C,EAAE,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;AAC9B,EAAE,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;AAC9B,EAAE,IAAI,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC;AAC5B,EAAE,IAAI,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,cAAc,EAAE,cAAc,EAAE,UAAU,CAAC;AACtE,EAAE,IAAI,MAAM,EAAE;AACd,IAAI,MAAM,GAAG,MAAM,CAAC;AACpB,GAAG,MAAM,IAAI,MAAM,EAAE;AACrB,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,oBAAoB,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AAChE,GAAG,MAAM;AACT,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC;AACxD,GAAG;AACH,EAAE,IAAI,MAAM,EAAE,KAAK,GAAG,IAAI,MAAM,EAAE;AAClC,IAAI,cAAc,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AACjC,IAAI,IAAI,OAAO,CAAC,cAAc,EAAE;AAChC,MAAM,UAAU,GAAG,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACzD,MAAM,cAAc,GAAG,UAAU,IAAI,UAAU,CAAC,KAAK,CAAC;AACtD,KAAK,MAAM,cAAc,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AACxC,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,GAAG,GAAG,GAAG,MAAM,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;AAC1F;AACA,IAAI,IAAI,CAAC,MAAM,IAAI,cAAc,KAAK,SAAS,EAAE;AACjD,MAAM,IAAI,OAAO,cAAc,IAAI,OAAO,cAAc,EAAE,SAAS;AACnE,MAAM,yBAAyB,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;AAChE,KAAK;AACL;AACA,IAAI,IAAI,OAAO,CAAC,IAAI,KAAK,cAAc,IAAI,cAAc,CAAC,IAAI,CAAC,EAAE;AACjE,MAAM,2BAA2B,CAAC,cAAc,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AAChE,KAAK;AACL,IAAI,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC;AACxD,GAAG;AACH,CAAC"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1727432820807,
      "end": 1727432820815,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1727432820815,
      "end": 1727432820815,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1727432820815,
      "end": 1727432820815,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1727432820815,
      "end": 1727432820815,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1727432820815,
      "end": 1727432820815,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1727432820816,
      "end": 1727432820816,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1727432820816,
      "end": 1727432820816,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1727432820816,
      "end": 1727432820816,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1727432820816,
      "end": 1727432820816,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1727432820816,
      "end": 1727432820816,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1727432820816,
      "end": 1727432820816,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1727432820816,
      "end": 1727432820816,
      "order": "normal"
    }
  ]
}
