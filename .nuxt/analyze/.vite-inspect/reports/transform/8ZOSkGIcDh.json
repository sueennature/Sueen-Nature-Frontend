{
  "resolvedId": "/var/www/html/Sueen-Nature-Frontend/node_modules/flowbite/lib/esm/components/accordion/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport instances from '../../dom/instances';\nvar Default = {\n    alwaysOpen: false,\n    activeClasses: 'bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white',\n    inactiveClasses: 'text-gray-500 dark:text-gray-400',\n    onOpen: function () { },\n    onClose: function () { },\n    onToggle: function () { },\n};\nvar DefaultInstanceOptions = {\n    id: null,\n    override: true,\n};\nvar Accordion = /** @class */ (function () {\n    function Accordion(accordionEl, items, options, instanceOptions) {\n        if (accordionEl === void 0) { accordionEl = null; }\n        if (items === void 0) { items = []; }\n        if (options === void 0) { options = Default; }\n        if (instanceOptions === void 0) { instanceOptions = DefaultInstanceOptions; }\n        this._instanceId = instanceOptions.id\n            ? instanceOptions.id\n            : accordionEl.id;\n        this._accordionEl = accordionEl;\n        this._items = items;\n        this._options = __assign(__assign({}, Default), options);\n        this._initialized = false;\n        this.init();\n        instances.addInstance('Accordion', this, this._instanceId, instanceOptions.override);\n    }\n    Accordion.prototype.init = function () {\n        var _this = this;\n        if (this._items.length && !this._initialized) {\n            // show accordion item based on click\n            this._items.forEach(function (item) {\n                if (item.active) {\n                    _this.open(item.id);\n                }\n                var clickHandler = function () {\n                    _this.toggle(item.id);\n                };\n                item.triggerEl.addEventListener('click', clickHandler);\n                // Store the clickHandler in a property of the item for removal later\n                item.clickHandler = clickHandler;\n            });\n            this._initialized = true;\n        }\n    };\n    Accordion.prototype.destroy = function () {\n        if (this._items.length && this._initialized) {\n            this._items.forEach(function (item) {\n                item.triggerEl.removeEventListener('click', item.clickHandler);\n                // Clean up by deleting the clickHandler property from the item\n                delete item.clickHandler;\n            });\n            this._initialized = false;\n        }\n    };\n    Accordion.prototype.removeInstance = function () {\n        instances.removeInstance('Accordion', this._instanceId);\n    };\n    Accordion.prototype.destroyAndRemoveInstance = function () {\n        this.destroy();\n        this.removeInstance();\n    };\n    Accordion.prototype.getItem = function (id) {\n        return this._items.filter(function (item) { return item.id === id; })[0];\n    };\n    Accordion.prototype.open = function (id) {\n        var _a, _b;\n        var _this = this;\n        var item = this.getItem(id);\n        // don't hide other accordions if always open\n        if (!this._options.alwaysOpen) {\n            this._items.map(function (i) {\n                var _a, _b;\n                if (i !== item) {\n                    (_a = i.triggerEl.classList).remove.apply(_a, _this._options.activeClasses.split(' '));\n                    (_b = i.triggerEl.classList).add.apply(_b, _this._options.inactiveClasses.split(' '));\n                    i.targetEl.classList.add('hidden');\n                    i.triggerEl.setAttribute('aria-expanded', 'false');\n                    i.active = false;\n                    // rotate icon if set\n                    if (i.iconEl) {\n                        i.iconEl.classList.add('rotate-180');\n                    }\n                }\n            });\n        }\n        // show active item\n        (_a = item.triggerEl.classList).add.apply(_a, this._options.activeClasses.split(' '));\n        (_b = item.triggerEl.classList).remove.apply(_b, this._options.inactiveClasses.split(' '));\n        item.triggerEl.setAttribute('aria-expanded', 'true');\n        item.targetEl.classList.remove('hidden');\n        item.active = true;\n        // rotate icon if set\n        if (item.iconEl) {\n            item.iconEl.classList.remove('rotate-180');\n        }\n        // callback function\n        this._options.onOpen(this, item);\n    };\n    Accordion.prototype.toggle = function (id) {\n        var item = this.getItem(id);\n        if (item.active) {\n            this.close(id);\n        }\n        else {\n            this.open(id);\n        }\n        // callback function\n        this._options.onToggle(this, item);\n    };\n    Accordion.prototype.close = function (id) {\n        var _a, _b;\n        var item = this.getItem(id);\n        (_a = item.triggerEl.classList).remove.apply(_a, this._options.activeClasses.split(' '));\n        (_b = item.triggerEl.classList).add.apply(_b, this._options.inactiveClasses.split(' '));\n        item.targetEl.classList.add('hidden');\n        item.triggerEl.setAttribute('aria-expanded', 'false');\n        item.active = false;\n        // rotate icon if set\n        if (item.iconEl) {\n            item.iconEl.classList.add('rotate-180');\n        }\n        // callback function\n        this._options.onClose(this, item);\n    };\n    Accordion.prototype.updateOnOpen = function (callback) {\n        this._options.onOpen = callback;\n    };\n    Accordion.prototype.updateOnClose = function (callback) {\n        this._options.onClose = callback;\n    };\n    Accordion.prototype.updateOnToggle = function (callback) {\n        this._options.onToggle = callback;\n    };\n    return Accordion;\n}());\nexport function initAccordions() {\n    document.querySelectorAll('[data-accordion]').forEach(function ($accordionEl) {\n        var alwaysOpen = $accordionEl.getAttribute('data-accordion');\n        var activeClasses = $accordionEl.getAttribute('data-active-classes');\n        var inactiveClasses = $accordionEl.getAttribute('data-inactive-classes');\n        var items = [];\n        $accordionEl\n            .querySelectorAll('[data-accordion-target]')\n            .forEach(function ($triggerEl) {\n            // Consider only items that directly belong to $accordionEl\n            // (to make nested accordions work).\n            if ($triggerEl.closest('[data-accordion]') === $accordionEl) {\n                var item = {\n                    id: $triggerEl.getAttribute('data-accordion-target'),\n                    triggerEl: $triggerEl,\n                    targetEl: document.querySelector($triggerEl.getAttribute('data-accordion-target')),\n                    iconEl: $triggerEl.querySelector('[data-accordion-icon]'),\n                    active: $triggerEl.getAttribute('aria-expanded') === 'true'\n                        ? true\n                        : false,\n                };\n                items.push(item);\n            }\n        });\n        new Accordion($accordionEl, items, {\n            alwaysOpen: alwaysOpen === 'open' ? true : false,\n            activeClasses: activeClasses\n                ? activeClasses\n                : Default.activeClasses,\n            inactiveClasses: inactiveClasses\n                ? inactiveClasses\n                : Default.inactiveClasses,\n        });\n    });\n}\nif (typeof window !== 'undefined') {\n    window.Accordion = Accordion;\n    window.initAccordions = initAccordions;\n}\nexport default Accordion;\n//# sourceMappingURL=index.js.map",
      "start": 1727432816701,
      "end": 1727432816993,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1727432816993,
      "end": 1727432816993,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1727432816993,
      "end": 1727432816993,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1727432816993,
      "end": 1727432816993,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1727432816993,
      "end": 1727432816993,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1727432816993,
      "end": 1727432816993,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1727432816993,
      "end": 1727432816993,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1727432816993,
      "end": 1727432816993,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1727432816993,
      "end": 1727432816993,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1727432816994,
      "end": 1727432816994,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727432816994,
      "end": 1727432816994,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1727432816994,
      "end": 1727432816994,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1727432816994,
      "end": 1727432816994,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1727432816994,
      "end": 1727432816994,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727432816994,
      "end": 1727432816994,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1727432816994,
      "end": 1727432816994,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1727432816994,
      "end": 1727432816994,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1727432816994,
      "end": 1727432816994,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1727432816994,
      "end": 1727432816994,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1727432816994,
      "end": 1727432816994,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1727432816994,
      "end": 1727432816994,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1727432816994,
      "end": 1727432816996,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1727432816996,
      "end": 1727432816996,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1727432816996,
      "end": 1727432816996,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1727432816996,
      "end": 1727432816996,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1727432816996,
      "end": 1727432816996,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1727432816996,
      "end": 1727432816996,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1727432816996,
      "end": 1727432816996,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1727432816996,
      "end": 1727432816996,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1727432816996,
      "end": 1727432816996,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1727432816996,
      "end": 1727432816996,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1727432816996,
      "end": 1727432816996,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1727432816996,
      "end": 1727432816996,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1727432816996,
      "end": 1727432816996,
      "order": "normal"
    }
  ]
}
