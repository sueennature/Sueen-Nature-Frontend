{
  "resolvedId": "/var/www/html/Sueen-Nature-Frontend/node_modules/flowbite-datepicker/js/events/inputFieldListeners.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import {isInRange} from '../lib/utils.js';\nimport {addDays, addMonths, addYears, startOfYearPeriod} from '../lib/date.js';\nimport {goToPrevOrNext, switchView, unfocus} from './functions.js';\n\n// Find the closest date that doesn't meet the condition for unavailable date\n// Returns undefined if no available date is found\n// addFn: function to calculate the next date\n//   - args: time value, amount\n// increase: amount to pass to addFn\n// testFn: function to test the unavailablity of the date\n//   - args: time value; retun: true if unavailable\nfunction findNextAvailableOne(date, addFn, increase, testFn, min, max) {\n  if (!isInRange(date, min, max)) {\n    return;\n  }\n  if (testFn(date)) {\n    const newDate = addFn(date, increase);\n    return findNextAvailableOne(newDate, addFn, increase, testFn, min, max);\n  }\n  return date;\n}\n\n// direction: -1 (left/up), 1 (right/down)\n// vertical: true for up/down, false for left/right\nfunction moveByArrowKey(datepicker, ev, direction, vertical) {\n  const picker = datepicker.picker;\n  const currentView = picker.currentView;\n  const step = currentView.step || 1;\n  let viewDate = picker.viewDate;\n  let addFn;\n  let testFn;\n  switch (currentView.id) {\n    case 0:\n      if (vertical) {\n        viewDate = addDays(viewDate, direction * 7);\n      } else if (ev.ctrlKey || ev.metaKey) {\n        viewDate = addYears(viewDate, direction);\n      } else {\n        viewDate = addDays(viewDate, direction);\n      }\n      addFn = addDays;\n      testFn = (date) => currentView.disabled.includes(date);\n      break;\n    case 1:\n      viewDate = addMonths(viewDate, vertical ? direction * 4 : direction);\n      addFn = addMonths;\n      testFn = (date) => {\n        const dt = new Date(date);\n        const {year, disabled} = currentView;\n        return dt.getFullYear() === year && disabled.includes(dt.getMonth());\n      };\n      break;\n    default:\n      viewDate = addYears(viewDate, direction * (vertical ? 4 : 1) * step);\n      addFn = addYears;\n      testFn = date => currentView.disabled.includes(startOfYearPeriod(date, step));\n  }\n  viewDate = findNextAvailableOne(\n    viewDate,\n    addFn,\n    direction < 0 ? -step : step,\n    testFn,\n    currentView.minDate,\n    currentView.maxDate\n  );\n  if (viewDate !== undefined) {\n    picker.changeFocus(viewDate).render();\n  }\n}\n\nexport function onKeydown(datepicker, ev) {\n  if (ev.key === 'Tab') {\n    unfocus(datepicker);\n    return;\n  }\n\n  const picker = datepicker.picker;\n  const {id, isMinView} = picker.currentView;\n  if (!picker.active) {\n    switch (ev.key) {\n      case 'ArrowDown':\n      case 'Escape':\n        picker.show();\n        break;\n      case 'Enter':\n        datepicker.update();\n        break;\n      default:\n        return;\n    }\n  } else if (datepicker.editMode) {\n    switch (ev.key) {\n      case 'Escape':\n        picker.hide();\n        break;\n      case 'Enter':\n        datepicker.exitEditMode({update: true, autohide: datepicker.config.autohide});\n        break;\n      default:\n        return;\n    }\n  } else {\n    switch (ev.key) {\n      case 'Escape':\n        picker.hide();\n        break;\n      case 'ArrowLeft':\n        if (ev.ctrlKey || ev.metaKey) {\n          goToPrevOrNext(datepicker, -1);\n        } else if (ev.shiftKey) {\n          datepicker.enterEditMode();\n          return;\n        } else {\n          moveByArrowKey(datepicker, ev, -1, false);\n        }\n        break;\n      case 'ArrowRight':\n        if (ev.ctrlKey || ev.metaKey) {\n          goToPrevOrNext(datepicker, 1);\n        } else if (ev.shiftKey) {\n          datepicker.enterEditMode();\n          return;\n        } else {\n          moveByArrowKey(datepicker, ev, 1, false);\n        }\n        break;\n      case 'ArrowUp':\n        if (ev.ctrlKey || ev.metaKey) {\n          switchView(datepicker);\n        } else if (ev.shiftKey) {\n          datepicker.enterEditMode();\n          return;\n        } else {\n          moveByArrowKey(datepicker, ev, -1, true);\n        }\n        break;\n      case 'ArrowDown':\n        if (ev.shiftKey && !ev.ctrlKey && !ev.metaKey) {\n          datepicker.enterEditMode();\n          return;\n        }\n        moveByArrowKey(datepicker, ev, 1, true);\n        break;\n      case 'Enter':\n        if (isMinView) {\n          datepicker.setDate(picker.viewDate);\n        } else {\n          picker.changeView(id - 1).render();\n        }\n        break;\n      case 'Backspace':\n      case 'Delete':\n        datepicker.enterEditMode();\n        return;\n      default:\n        if (ev.key.length === 1 && !ev.ctrlKey && !ev.metaKey) {\n          datepicker.enterEditMode();\n        }\n        return;\n    }\n  }\n  ev.preventDefault();\n  ev.stopPropagation();\n}\n\nexport function onFocus(datepicker) {\n  if (datepicker.config.showOnFocus && !datepicker._showing) {\n    datepicker.show();\n  }\n}\n\n// for the prevention for entering edit mode while getting focus on click\nexport function onMousedown(datepicker, ev) {\n  const el = ev.target;\n  if (datepicker.picker.active || datepicker.config.showOnClick) {\n    el._active = el === document.activeElement;\n    el._clicking = setTimeout(() => {\n      delete el._active;\n      delete el._clicking;\n    }, 2000);\n  }\n}\n\nexport function onClickInput(datepicker, ev) {\n  const el = ev.target;\n  if (!el._clicking) {\n    return;\n  }\n  clearTimeout(el._clicking);\n  delete el._clicking;\n\n  if (el._active) {\n    datepicker.enterEditMode();\n  }\n  delete el._active;\n\n  if (datepicker.config.showOnClick) {\n    datepicker.show();\n  }\n}\n\nexport function onPaste(datepicker, ev) {\n  if (ev.clipboardData.types.includes('text/plain')) {\n    datepicker.enterEditMode();\n  }\n}\n",
      "start": 1727432817244,
      "end": 1727432817343,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1727432817343,
      "end": 1727432817343,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1727432817343,
      "end": 1727432817343,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1727432817343,
      "end": 1727432817343,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1727432817343,
      "end": 1727432817343,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1727432817343,
      "end": 1727432817343,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1727432817343,
      "end": 1727432817343,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1727432817343,
      "end": 1727432817343,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1727432817343,
      "end": 1727432817343,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1727432817343,
      "end": 1727432817343,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727432817343,
      "end": 1727432817343,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1727432817343,
      "end": 1727432817343,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1727432817343,
      "end": 1727432817343,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1727432817343,
      "end": 1727432817344,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727432817344,
      "end": 1727432817344,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1727432817344,
      "end": 1727432817344,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1727432817344,
      "end": 1727432817344,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1727432817344,
      "end": 1727432817344,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1727432817344,
      "end": 1727432817344,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1727432817344,
      "end": 1727432817344,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1727432817344,
      "end": 1727432817344,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1727432817344,
      "end": 1727432817345,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1727432817345,
      "end": 1727432817345,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1727432817345,
      "end": 1727432817345,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1727432817345,
      "end": 1727432817345,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1727432817345,
      "end": 1727432817345,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1727432817345,
      "end": 1727432817345,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1727432817345,
      "end": 1727432817345,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1727432817345,
      "end": 1727432817345,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1727432817345,
      "end": 1727432817345,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1727432817345,
      "end": 1727432817345,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1727432817345,
      "end": 1727432817345,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1727432817345,
      "end": 1727432817345,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1727432817345,
      "end": 1727432817345,
      "order": "normal"
    }
  ]
}
