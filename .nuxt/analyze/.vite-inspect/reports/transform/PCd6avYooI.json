{
  "resolvedId": "/var/www/html/Sueen-Nature-Frontend/node_modules/flowbite-datepicker/js/lib/date.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "export function stripTime(timeValue) {\n  return new Date(timeValue).setHours(0, 0, 0, 0);\n}\n\nexport function today() {\n  return new Date().setHours(0, 0, 0, 0);\n}\n\n// Get the time value of the start of given date or year, month and day\nexport function dateValue(...args) {\n  switch (args.length) {\n    case 0:\n      return today();\n    case 1:\n      return stripTime(args[0]);\n  }\n\n  // use setFullYear() to keep 2-digit year from being mapped to 1900-1999\n  const newDate = new Date(0);\n  newDate.setFullYear(...args);\n  return newDate.setHours(0, 0, 0, 0);\n}\n\nexport function addDays(date, amount) {\n  const newDate = new Date(date);\n  return newDate.setDate(newDate.getDate() + amount);\n}\n\nexport function addWeeks(date, amount) {\n  return addDays(date, amount * 7);\n}\n\nexport function addMonths(date, amount) {\n  // If the day of the date is not in the new month, the last day of the new\n  // month will be returned. e.g. Jan 31 + 1 month â†’ Feb 28 (not Mar 03)\n  const newDate = new Date(date);\n  const monthsToSet = newDate.getMonth() + amount;\n  let expectedMonth = monthsToSet % 12;\n  if (expectedMonth < 0) {\n    expectedMonth += 12;\n  }\n\n  const time = newDate.setMonth(monthsToSet);\n  return newDate.getMonth() !== expectedMonth ? newDate.setDate(0) : time;\n}\n\nexport function addYears(date, amount) {\n  // If the date is Feb 29 and the new year is not a leap year, Feb 28 of the\n  // new year will be returned.\n  const newDate = new Date(date);\n  const expectedMonth = newDate.getMonth();\n  const time = newDate.setFullYear(newDate.getFullYear() + amount);\n  return expectedMonth === 1 && newDate.getMonth() === 2 ? newDate.setDate(0) : time;\n}\n\n// Calculate the distance bettwen 2 days of the week\nfunction dayDiff(day, from) {\n  return (day - from + 7) % 7;\n}\n\n// Get the date of the specified day of the week of given base date\nexport function dayOfTheWeekOf(baseDate, dayOfWeek, weekStart = 0) {\n  const baseDay = new Date(baseDate).getDay();\n  return addDays(baseDate, dayDiff(dayOfWeek, weekStart) - dayDiff(baseDay, weekStart));\n}\n\n// Get the ISO week of a date\nexport function getWeek(date) {\n  // start of ISO week is Monday\n  const thuOfTheWeek = dayOfTheWeekOf(date, 4, 1);\n  // 1st week == the week where the 4th of January is in\n  const firstThu = dayOfTheWeekOf(new Date(thuOfTheWeek).setMonth(0, 4), 4, 1);\n  return Math.round((thuOfTheWeek - firstThu) / 604800000) + 1;\n}\n\n// Get the start year of the period of years that includes given date\n// years: length of the year period\nexport function startOfYearPeriod(date, years) {\n  /* @see https://en.wikipedia.org/wiki/Year_zero#ISO_8601 */\n  const year = new Date(date).getFullYear();\n  return Math.floor(year / years) * years;\n}\n",
      "start": 1727432817228,
      "end": 1727432817294,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1727432817294,
      "end": 1727432817294,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1727432817294,
      "end": 1727432817294,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1727432817294,
      "end": 1727432817294,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1727432817295,
      "end": 1727432817295,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1727432817295,
      "end": 1727432817295,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1727432817295,
      "end": 1727432817295,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1727432817295,
      "end": 1727432817295,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1727432817295,
      "end": 1727432817295,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1727432817295,
      "end": 1727432817295,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727432817295,
      "end": 1727432817295,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1727432817295,
      "end": 1727432817295,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1727432817295,
      "end": 1727432817295,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1727432817295,
      "end": 1727432817295,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727432817295,
      "end": 1727432817295,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1727432817295,
      "end": 1727432817295,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1727432817295,
      "end": 1727432817295,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1727432817295,
      "end": 1727432817295,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1727432817295,
      "end": 1727432817295,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1727432817295,
      "end": 1727432817295,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1727432817295,
      "end": 1727432817295,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1727432817295,
      "end": 1727432817296,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1727432817296,
      "end": 1727432817296,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1727432817296,
      "end": 1727432817296,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1727432817296,
      "end": 1727432817296,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1727432817296,
      "end": 1727432817296,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1727432817296,
      "end": 1727432817296,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1727432817296,
      "end": 1727432817296,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1727432817296,
      "end": 1727432817296,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1727432817296,
      "end": 1727432817296,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1727432817296,
      "end": 1727432817296,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1727432817296,
      "end": 1727432817296,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1727432817296,
      "end": 1727432817296,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1727432817296,
      "end": 1727432817296,
      "order": "normal"
    }
  ]
}
