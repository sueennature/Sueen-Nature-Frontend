{
  "resolvedId": "/var/www/html/Sueen-Nature-Frontend/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar call = require('../internals/function-call');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (KEY, exec, FORCED, SHAM) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegExp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) !== 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () {\n      execCalled = true;\n      return null;\n    };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    FORCED\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      var $exec = regexp.exec;\n      if ($exec === regexpExec || $exec === RegExpPrototype.exec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: call(nativeRegExpMethod, regexp, str, arg2) };\n        }\n        return { done: true, value: call(nativeMethod, str, regexp, arg2) };\n      }\n      return { done: false };\n    });\n\n    defineBuiltIn(String.prototype, KEY, methods[0]);\n    defineBuiltIn(RegExpPrototype, SYMBOL, methods[1]);\n  }\n\n  if (SHAM) createNonEnumerableProperty(RegExpPrototype[SYMBOL], 'sham', true);\n};\n",
      "start": 1727432819783,
      "end": 1727432819916,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1727432819916,
      "end": 1727432819916,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1727432819916,
      "end": 1727432819916,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1727432819916,
      "end": 1727432819916,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1727432819916,
      "end": 1727432819916,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1727432819916,
      "end": 1727432819916,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1727432819916,
      "end": 1727432819916,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1727432819916,
      "end": 1727432819916,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1727432819916,
      "end": 1727432819916,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1727432819916,
      "end": 1727432819916,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727432819916,
      "end": 1727432819916,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1727432819916,
      "end": 1727432819916,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1727432819916,
      "end": 1727432819916,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1727432819917,
      "end": 1727432819917,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727432819917,
      "end": 1727432819917,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1727432819917,
      "end": 1727432819917,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1727432819917,
      "end": 1727432819917,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1727432819917,
      "end": 1727432819917,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1727432819917,
      "end": 1727432819917,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1727432819917,
      "end": 1727432819917,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1727432819917,
      "end": 1727432819917,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport \"\\u0000/var/www/html/Sueen-Nature-Frontend/node_modules/core-js/modules/es.regexp.exec.js?commonjs-proxy\";\nimport require$$1 from \"\\u0000/var/www/html/Sueen-Nature-Frontend/node_modules/core-js/internals/function-call.js?commonjs-proxy\";\nimport require$$2 from \"\\u0000/var/www/html/Sueen-Nature-Frontend/node_modules/core-js/internals/define-built-in.js?commonjs-proxy\";\nimport require$$3 from \"\\u0000/var/www/html/Sueen-Nature-Frontend/node_modules/core-js/internals/regexp-exec.js?commonjs-proxy\";\nimport require$$4 from \"\\u0000/var/www/html/Sueen-Nature-Frontend/node_modules/core-js/internals/fails.js?commonjs-proxy\";\nimport require$$5 from \"\\u0000/var/www/html/Sueen-Nature-Frontend/node_modules/core-js/internals/well-known-symbol.js?commonjs-proxy\";\nimport require$$6 from \"\\u0000/var/www/html/Sueen-Nature-Frontend/node_modules/core-js/internals/create-non-enumerable-property.js?commonjs-proxy\";\n\n'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\n\nvar call = require$$1;\nvar defineBuiltIn = require$$2;\nvar regexpExec = require$$3;\nvar fails = require$$4;\nvar wellKnownSymbol = require$$5;\nvar createNonEnumerableProperty = require$$6;\n\nvar SPECIES = wellKnownSymbol('species');\nvar RegExpPrototype = RegExp.prototype;\n\nvar fixRegexpWellKnownSymbolLogic = function (KEY, exec, FORCED, SHAM) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegExp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) !== 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () {\n      execCalled = true;\n      return null;\n    };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    FORCED\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      var $exec = regexp.exec;\n      if ($exec === regexpExec || $exec === RegExpPrototype.exec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: call(nativeRegExpMethod, regexp, str, arg2) };\n        }\n        return { done: true, value: call(nativeMethod, str, regexp, arg2) };\n      }\n      return { done: false };\n    });\n\n    defineBuiltIn(String.prototype, KEY, methods[0]);\n    defineBuiltIn(RegExpPrototype, SYMBOL, methods[1]);\n  }\n\n  if (SHAM) createNonEnumerableProperty(RegExpPrototype[SYMBOL], 'sham', true);\n};\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(fixRegexpWellKnownSymbolLogic);\nexport { fixRegexpWellKnownSymbolLogic as __moduleExports };",
      "start": 1727432819917,
      "end": 1727432820946,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1727432820946,
      "end": 1727432820946,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1727432820946,
      "end": 1727432820946,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1727432820946,
      "end": 1727432820946,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1727432820946,
      "end": 1727432820946,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1727432820947,
      "end": 1727432820947,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1727432820947,
      "end": 1727432820947,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1727432820947,
      "end": 1727432820947,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1727432820947,
      "end": 1727432820947,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1727432820947,
      "end": 1727432820947,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1727432820947,
      "end": 1727432820947,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1727432820947,
      "end": 1727432820947,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1727432820947,
      "end": 1727432820947,
      "order": "normal"
    }
  ]
}
