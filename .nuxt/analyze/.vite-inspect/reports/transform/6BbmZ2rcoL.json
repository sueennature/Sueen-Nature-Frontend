{
  "resolvedId": "/var/www/html/Sueen-Nature-Frontend/node_modules/flowbite/lib/esm/components/dropdown/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n/* eslint-disable @typescript-eslint/no-empty-function */\nimport { createPopper } from '@popperjs/core';\nimport instances from '../../dom/instances';\nvar Default = {\n    placement: 'bottom',\n    triggerType: 'click',\n    offsetSkidding: 0,\n    offsetDistance: 10,\n    delay: 300,\n    ignoreClickOutsideClass: false,\n    onShow: function () { },\n    onHide: function () { },\n    onToggle: function () { },\n};\nvar DefaultInstanceOptions = {\n    id: null,\n    override: true,\n};\nvar Dropdown = /** @class */ (function () {\n    function Dropdown(targetElement, triggerElement, options, instanceOptions) {\n        if (targetElement === void 0) { targetElement = null; }\n        if (triggerElement === void 0) { triggerElement = null; }\n        if (options === void 0) { options = Default; }\n        if (instanceOptions === void 0) { instanceOptions = DefaultInstanceOptions; }\n        this._instanceId = instanceOptions.id\n            ? instanceOptions.id\n            : targetElement.id;\n        this._targetEl = targetElement;\n        this._triggerEl = triggerElement;\n        this._options = __assign(__assign({}, Default), options);\n        this._popperInstance = null;\n        this._visible = false;\n        this._initialized = false;\n        this.init();\n        instances.addInstance('Dropdown', this, this._instanceId, instanceOptions.override);\n    }\n    Dropdown.prototype.init = function () {\n        if (this._triggerEl && this._targetEl && !this._initialized) {\n            this._popperInstance = this._createPopperInstance();\n            this._setupEventListeners();\n            this._initialized = true;\n        }\n    };\n    Dropdown.prototype.destroy = function () {\n        var _this = this;\n        var triggerEvents = this._getTriggerEvents();\n        // Remove click event listeners for trigger element\n        if (this._options.triggerType === 'click') {\n            triggerEvents.showEvents.forEach(function (ev) {\n                _this._triggerEl.removeEventListener(ev, _this._clickHandler);\n            });\n        }\n        // Remove hover event listeners for trigger and target elements\n        if (this._options.triggerType === 'hover') {\n            triggerEvents.showEvents.forEach(function (ev) {\n                _this._triggerEl.removeEventListener(ev, _this._hoverShowTriggerElHandler);\n                _this._targetEl.removeEventListener(ev, _this._hoverShowTargetElHandler);\n            });\n            triggerEvents.hideEvents.forEach(function (ev) {\n                _this._triggerEl.removeEventListener(ev, _this._hoverHideHandler);\n                _this._targetEl.removeEventListener(ev, _this._hoverHideHandler);\n            });\n        }\n        this._popperInstance.destroy();\n        this._initialized = false;\n    };\n    Dropdown.prototype.removeInstance = function () {\n        instances.removeInstance('Dropdown', this._instanceId);\n    };\n    Dropdown.prototype.destroyAndRemoveInstance = function () {\n        this.destroy();\n        this.removeInstance();\n    };\n    Dropdown.prototype._setupEventListeners = function () {\n        var _this = this;\n        var triggerEvents = this._getTriggerEvents();\n        this._clickHandler = function () {\n            _this.toggle();\n        };\n        // click event handling for trigger element\n        if (this._options.triggerType === 'click') {\n            triggerEvents.showEvents.forEach(function (ev) {\n                _this._triggerEl.addEventListener(ev, _this._clickHandler);\n            });\n        }\n        this._hoverShowTriggerElHandler = function (ev) {\n            if (ev.type === 'click') {\n                _this.toggle();\n            }\n            else {\n                setTimeout(function () {\n                    _this.show();\n                }, _this._options.delay);\n            }\n        };\n        this._hoverShowTargetElHandler = function () {\n            _this.show();\n        };\n        this._hoverHideHandler = function () {\n            setTimeout(function () {\n                if (!_this._targetEl.matches(':hover')) {\n                    _this.hide();\n                }\n            }, _this._options.delay);\n        };\n        // hover event handling for trigger element\n        if (this._options.triggerType === 'hover') {\n            triggerEvents.showEvents.forEach(function (ev) {\n                _this._triggerEl.addEventListener(ev, _this._hoverShowTriggerElHandler);\n                _this._targetEl.addEventListener(ev, _this._hoverShowTargetElHandler);\n            });\n            triggerEvents.hideEvents.forEach(function (ev) {\n                _this._triggerEl.addEventListener(ev, _this._hoverHideHandler);\n                _this._targetEl.addEventListener(ev, _this._hoverHideHandler);\n            });\n        }\n    };\n    Dropdown.prototype._createPopperInstance = function () {\n        return createPopper(this._triggerEl, this._targetEl, {\n            placement: this._options.placement,\n            modifiers: [\n                {\n                    name: 'offset',\n                    options: {\n                        offset: [\n                            this._options.offsetSkidding,\n                            this._options.offsetDistance,\n                        ],\n                    },\n                },\n            ],\n        });\n    };\n    Dropdown.prototype._setupClickOutsideListener = function () {\n        var _this = this;\n        this._clickOutsideEventListener = function (ev) {\n            _this._handleClickOutside(ev, _this._targetEl);\n        };\n        document.body.addEventListener('click', this._clickOutsideEventListener, true);\n    };\n    Dropdown.prototype._removeClickOutsideListener = function () {\n        document.body.removeEventListener('click', this._clickOutsideEventListener, true);\n    };\n    Dropdown.prototype._handleClickOutside = function (ev, targetEl) {\n        var clickedEl = ev.target;\n        // Ignore clicks on the trigger element (ie. a datepicker input)\n        var ignoreClickOutsideClass = this._options.ignoreClickOutsideClass;\n        var isIgnored = false;\n        if (ignoreClickOutsideClass) {\n            var ignoredClickOutsideEls = document.querySelectorAll(\".\".concat(ignoreClickOutsideClass));\n            ignoredClickOutsideEls.forEach(function (el) {\n                if (el.contains(clickedEl)) {\n                    isIgnored = true;\n                    return;\n                }\n            });\n        }\n        // Ignore clicks on the target element (ie. dropdown itself)\n        if (clickedEl !== targetEl &&\n            !targetEl.contains(clickedEl) &&\n            !this._triggerEl.contains(clickedEl) &&\n            !isIgnored &&\n            this.isVisible()) {\n            this.hide();\n        }\n    };\n    Dropdown.prototype._getTriggerEvents = function () {\n        switch (this._options.triggerType) {\n            case 'hover':\n                return {\n                    showEvents: ['mouseenter', 'click'],\n                    hideEvents: ['mouseleave'],\n                };\n            case 'click':\n                return {\n                    showEvents: ['click'],\n                    hideEvents: [],\n                };\n            case 'none':\n                return {\n                    showEvents: [],\n                    hideEvents: [],\n                };\n            default:\n                return {\n                    showEvents: ['click'],\n                    hideEvents: [],\n                };\n        }\n    };\n    Dropdown.prototype.toggle = function () {\n        if (this.isVisible()) {\n            this.hide();\n        }\n        else {\n            this.show();\n        }\n        this._options.onToggle(this);\n    };\n    Dropdown.prototype.isVisible = function () {\n        return this._visible;\n    };\n    Dropdown.prototype.show = function () {\n        this._targetEl.classList.remove('hidden');\n        this._targetEl.classList.add('block');\n        // Enable the event listeners\n        this._popperInstance.setOptions(function (options) { return (__assign(__assign({}, options), { modifiers: __spreadArray(__spreadArray([], options.modifiers, true), [\n                { name: 'eventListeners', enabled: true },\n            ], false) })); });\n        this._setupClickOutsideListener();\n        // Update its position\n        this._popperInstance.update();\n        this._visible = true;\n        // callback function\n        this._options.onShow(this);\n    };\n    Dropdown.prototype.hide = function () {\n        this._targetEl.classList.remove('block');\n        this._targetEl.classList.add('hidden');\n        // Disable the event listeners\n        this._popperInstance.setOptions(function (options) { return (__assign(__assign({}, options), { modifiers: __spreadArray(__spreadArray([], options.modifiers, true), [\n                { name: 'eventListeners', enabled: false },\n            ], false) })); });\n        this._visible = false;\n        this._removeClickOutsideListener();\n        // callback function\n        this._options.onHide(this);\n    };\n    Dropdown.prototype.updateOnShow = function (callback) {\n        this._options.onShow = callback;\n    };\n    Dropdown.prototype.updateOnHide = function (callback) {\n        this._options.onHide = callback;\n    };\n    Dropdown.prototype.updateOnToggle = function (callback) {\n        this._options.onToggle = callback;\n    };\n    return Dropdown;\n}());\nexport function initDropdowns() {\n    document\n        .querySelectorAll('[data-dropdown-toggle]')\n        .forEach(function ($triggerEl) {\n        var dropdownId = $triggerEl.getAttribute('data-dropdown-toggle');\n        var $dropdownEl = document.getElementById(dropdownId);\n        if ($dropdownEl) {\n            var placement = $triggerEl.getAttribute('data-dropdown-placement');\n            var offsetSkidding = $triggerEl.getAttribute('data-dropdown-offset-skidding');\n            var offsetDistance = $triggerEl.getAttribute('data-dropdown-offset-distance');\n            var triggerType = $triggerEl.getAttribute('data-dropdown-trigger');\n            var delay = $triggerEl.getAttribute('data-dropdown-delay');\n            var ignoreClickOutsideClass = $triggerEl.getAttribute('data-dropdown-ignore-click-outside-class');\n            new Dropdown($dropdownEl, $triggerEl, {\n                placement: placement ? placement : Default.placement,\n                triggerType: triggerType\n                    ? triggerType\n                    : Default.triggerType,\n                offsetSkidding: offsetSkidding\n                    ? parseInt(offsetSkidding)\n                    : Default.offsetSkidding,\n                offsetDistance: offsetDistance\n                    ? parseInt(offsetDistance)\n                    : Default.offsetDistance,\n                delay: delay ? parseInt(delay) : Default.delay,\n                ignoreClickOutsideClass: ignoreClickOutsideClass\n                    ? ignoreClickOutsideClass\n                    : Default.ignoreClickOutsideClass,\n            });\n        }\n        else {\n            console.error(\"The dropdown element with id \\\"\".concat(dropdownId, \"\\\" does not exist. Please check the data-dropdown-toggle attribute.\"));\n        }\n    });\n}\nif (typeof window !== 'undefined') {\n    window.Dropdown = Dropdown;\n    window.initDropdowns = initDropdowns;\n}\nexport default Dropdown;\n//# sourceMappingURL=index.js.map",
      "start": 1727432816830,
      "end": 1727432817044,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1727432817044,
      "end": 1727432817044,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1727432817044,
      "end": 1727432817044,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1727432817044,
      "end": 1727432817044,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1727432817044,
      "end": 1727432817044,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1727432817044,
      "end": 1727432817044,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1727432817044,
      "end": 1727432817044,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1727432817044,
      "end": 1727432817045,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1727432817045,
      "end": 1727432817045,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1727432817045,
      "end": 1727432817045,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727432817045,
      "end": 1727432817045,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1727432817045,
      "end": 1727432817045,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1727432817045,
      "end": 1727432817045,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1727432817046,
      "end": 1727432817046,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1727432817046,
      "end": 1727432817046,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1727432817046,
      "end": 1727432817046,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1727432817046,
      "end": 1727432817046,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1727432817046,
      "end": 1727432817046,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1727432817046,
      "end": 1727432817046,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1727432817046,
      "end": 1727432817046,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1727432817046,
      "end": 1727432817046,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1727432817046,
      "end": 1727432817049,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1727432817049,
      "end": 1727432817049,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1727432817049,
      "end": 1727432817049,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1727432817049,
      "end": 1727432817049,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1727432817049,
      "end": 1727432817049,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1727432817049,
      "end": 1727432817049,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1727432817049,
      "end": 1727432817049,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1727432817049,
      "end": 1727432817049,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1727432817049,
      "end": 1727432817049,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1727432817049,
      "end": 1727432817049,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1727432817049,
      "end": 1727432817052,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1727432817052,
      "end": 1727432817052,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1727432817052,
      "end": 1727432817052,
      "order": "normal"
    }
  ]
}
